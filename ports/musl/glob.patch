--- musl-1.1.21/include/glob.h	2019-01-21 17:30:47.000000000 +0000
+++ musl-1.1.21/include/glob.h	2019-01-21 17:30:47.000000000 +0000
@@ -16,7 +16,12 @@
 	char **gl_pathv;
 	size_t gl_offs;
 	int __dummy1;
-	void *__dummy2[5];
+
+	void (*gl_closedir)(void *);
+	void*(*gl_readdir)(void *);
+	void* (*gl_opendir)(const char *);
+	int (*gl_lstat)(const char *, void *);
+	int (*gl_stat)(const char *, void *);
 } glob_t;
 
 int  glob(const char *__restrict, int, int (*)(const char *, int), glob_t *__restrict);
@@ -35,6 +35,7 @@
 #define GLOB_APPEND   0x20
 #define GLOB_NOESCAPE 0x40
 #define	GLOB_PERIOD   0x80
+#define GLOB_ALTDIRFUNC 0x160
 
 #define GLOB_NOSPACE 1
 #define GLOB_ABORTED 2
--- musl-1.1.21/src/regex/glob.c	2019-01-21 17:30:47.000000000 +0000
+++ musl-1.1.21/src/regex/glob.c	2019-01-21 17:30:47.000000000 +0000
@@ -32,8 +32,18 @@
 	return 0;
 }
 
-static int do_glob(char *buf, size_t pos, int type, char *pat, int flags, int (*errfunc)(const char *path, int err), struct match **tail)
+static int do_glob(char *buf, size_t pos, int type, char *pat, int flags, int (*errfunc)(const char *path, int err), struct match **tail, glob_t *restrict g)
 {
+	void *(*gl_readdir)(void *) = readdir;
+	void *(*gl_opendir)(const char *) = opendir;
+	void (*gl_closedir)(void *) = closedir;
+
+	if (flags & GLOB_ALTDIRFUNC) {
+		gl_readdir = g->gl_readdir;
+		gl_opendir = g->gl_opendir;
+		gl_closedir = g->gl_closedir;
+	}
+
 	/* If GLOB_MARK is unused, we don't care about type. */
 	if (!type && !(flags & GLOB_MARK)) type = DT_REG;
 
@@ -124,7 +134,7 @@
 			saved_sep = '\\';
 		}
 	}
-	DIR *dir = opendir(pos ? buf : ".");
+	DIR *dir = gl_opendir(pos ? buf : ".");
 	if (!dir) {
 		if (errfunc(buf, errno) || (flags & GLOB_ERR))
 			return GLOB_ABORTED;
@@ -132,7 +142,7 @@
 	}
 	int old_errno = errno;
 	struct dirent *de;
-	while (errno=0, de=readdir(dir)) {
+	while (errno=0, de=gl_readdir(dir)) {
 		/* Quickly skip non-directories when there's pattern left. */
 		if (p2 && de->d_type && de->d_type!=DT_DIR && de->d_type!=DT_LNK)
 			continue;
@@ -157,15 +167,15 @@
 
 		memcpy(buf+pos, de->d_name, l+1);
 		if (p2) *p2 = saved_sep;
-		int r = do_glob(buf, pos+l, de->d_type, p2 ? p2 : "", flags, errfunc, tail);
+		int r = do_glob(buf, pos+l, de->d_type, p2 ? p2 : "", flags, errfunc, tail, g);
 		if (r) {
-			closedir(dir);
+			gl_closedir(dir);
 			return r;
 		}
 	}
 	int readerr = errno;
 	if (p2) *p2 = saved_sep;
-	closedir(dir);
+	gl_closedir(dir);
 	if (readerr && (errfunc(buf, errno) || (flags & GLOB_ERR)))
 		return GLOB_ABORTED;
 	errno = old_errno;
@@ -249,7 +259,7 @@
 		if ((flags & (GLOB_TILDE | GLOB_TILDE_CHECK)) && *p == '~')
 			error = expand_tilde(&s, buf, &pos);
 		if (!error)
-			error = do_glob(buf, pos, 0, s, flags, errfunc, &tail);
+			error = do_glob(buf, pos, 0, s, flags, errfunc, &tail, g);
 		free(p);
 	}
 
