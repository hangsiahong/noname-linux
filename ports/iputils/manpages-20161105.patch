diff -Nur a/doc/arping.8 iputils/doc/arping.8
--- a/doc/arping.8	1970-01-01 00:00:00.000000000 +0000
+++ iputils/doc/arping.8	2017-05-12 12:39:52.737411560 +0000
@@ -0,0 +1,109 @@
+.\" This manpage has been automatically generated by docbook2man 
+.\" from a DocBook document.  This tool can be found at:
+.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
+.\" Please send any bug reports, improvements, comments, patches, 
+.\" etc. to Steve Cheng <steve@ggi-project.org>.
+.TH "ARPING" "8" "" "iputils-161105" "System Manager's Manual: iputils"
+.SH NAME
+arping \- send ARP REQUEST to a neighbour host
+.SH SYNOPSIS
+
+\fBarping\fR [\fB-AbDfhqUV\fR] [\fB-c \fIcount\fB\fR] [\fB-w \fIdeadline\fB\fR] [\fB-s \fIsource\fB\fR] [\fB-I \fIinterface\fB\fR] \fB\fIdestination\fB\fR
+
+.SH "DESCRIPTION"
+.PP
+Ping \fIdestination\fR on device \fIinterface\fR by ARP packets,
+using source address \fIsource\fR.
+.SH "OPTIONS"
+.TP
+\fB-A\fR
+The same as \fB-U\fR, but ARP REPLY packets used instead
+of ARP REQUEST.
+.TP
+\fB-b\fR
+Send only MAC level broadcasts. Normally \fBarping\fR starts
+from sending broadcast, and switch to unicast after reply received.
+.TP
+\fB-c \fIcount\fB\fR
+Stop after sending \fIcount\fR ARP REQUEST
+packets. With 
+\fIdeadline\fR
+option, instead wait for
+\fIcount\fR ARP REPLY packets, or until the timeout expires.
+.TP
+\fB-D\fR
+Duplicate address detection mode (DAD). See 
+RFC2131, 4.4.1.
+Returns 0, if DAD succeeded i.e. no replies are received
+.TP
+\fB-f\fR
+Finish after the first reply confirming that target is alive.
+.TP
+\fB-I \fIinterface\fB\fR
+Name of network device where to send ARP REQUEST packets.
+.TP
+\fB-h\fR
+Print help page and exit.
+.TP
+\fB-q\fR
+Quiet output. Nothing is displayed.
+.TP
+\fB-s \fIsource\fB\fR
+IP source address to use in ARP packets.
+If this option is absent, source address is:
+.RS
+.TP 0.2i
+\(bu
+In DAD mode (with option \fB-D\fR) set to 0.0.0.0.
+.TP 0.2i
+\(bu
+In Unsolicited ARP mode (with options \fB-U\fR or \fB-A\fR)
+set to \fIdestination\fR.
+.TP 0.2i
+\(bu
+Otherwise, it is calculated from routing tables.
+.RE
+.TP
+\fB-U\fR
+Unsolicited ARP mode to update neighbours' ARP caches.
+No replies are expected.
+.TP
+\fB-V\fR
+Print version of the program and exit.
+.TP
+\fB-w \fIdeadline\fB\fR
+Specify a timeout, in seconds, before
+\fBarping\fR
+exits regardless of how many
+packets have been sent or received. In this case
+\fBarping\fR
+does not stop after
+\fIcount\fR
+packet are sent, it waits either for
+\fIdeadline\fR
+expire or until
+\fIcount\fR
+probes are answered.
+.SH "SEE ALSO"
+.PP
+\fBping\fR(8),
+\fBclockdiff\fR(8),
+\fBtracepath\fR(8).
+.SH "AUTHOR"
+.PP
+\fBarping\fR was written by
+Alexey Kuznetsov
+<kuznet@ms2.inr.ac.ru>.
+It is now maintained by
+YOSHIFUJI Hideaki
+<yoshfuji@skbuff.net>.
+.SH "SECURITY"
+.PP
+\fBarping\fR requires CAP_NET_RAW capability
+to be executed. It is not recommended to be used as set-uid root,
+because it allows user to modify ARP caches of neighbour hosts.
+.SH "AVAILABILITY"
+.PP
+\fBarping\fR is part of \fIiputils\fR package
+and the latest versions are  available in source form at
+http://www.skbuff.net/iputils/iputils-current.tar.bz2.
diff -Nur a/doc/clockdiff.8 iputils/doc/clockdiff.8
--- a/doc/clockdiff.8	1970-01-01 00:00:00.000000000 +0000
+++ iputils/doc/clockdiff.8	2017-05-12 12:39:52.737411560 +0000
@@ -0,0 +1,81 @@
+.\" This manpage has been automatically generated by docbook2man 
+.\" from a DocBook document.  This tool can be found at:
+.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
+.\" Please send any bug reports, improvements, comments, patches, 
+.\" etc. to Steve Cheng <steve@ggi-project.org>.
+.TH "CLOCKDIFF" "8" "" "iputils-161105" "System Manager's Manual: iputils"
+.SH NAME
+clockdiff \- measure clock difference between hosts
+.SH SYNOPSIS
+
+\fBclockdiff\fR [\fB-o\fR] [\fB-o1\fR] \fB\fIdestination\fB\fR
+
+.SH "DESCRIPTION"
+.PP
+\fBclockdiff\fR Measures clock difference between us and
+\fIdestination\fR with 1 msec resolution using ICMP TIMESTAMP
+[2]
+packets or, optionally, IP TIMESTAMP option
+[3]
+option added to ICMP ECHO.
+[1]
+.SH "OPTIONS"
+.TP
+\fB-o\fR
+Use IP TIMESTAMP with ICMP ECHO instead of ICMP TIMESTAMP
+messages. It is useful with some destinations, which do not support
+ICMP TIMESTAMP (f.e. Solaris <2.4).
+.TP
+\fB-o1\fR
+Slightly different form of \fB-o\fR, namely it uses three-term
+IP TIMESTAMP with prespecified hop addresses instead of four term one.
+What flavor works better depends on target host. Particularly,
+\fB-o\fR is better for Linux.
+.SH "WARNINGS"
+.TP 0.2i
+\(bu
+Some nodes (Cisco) use non-standard timestamps, which is allowed
+by RFC, but makes timestamps mostly useless.
+.TP 0.2i
+\(bu
+Some nodes generate messed timestamps (Solaris>2.4), when
+run \fBxntpd\fR. Seems, its IP stack uses a corrupted clock source,
+which is synchronized to time-of-day clock periodically and jumps
+randomly making timestamps mostly useless. Good news is that you can
+use NTP in this case, which is even better.
+.TP 0.2i
+\(bu
+\fBclockdiff\fR shows difference in time modulo 24 days.
+.SH "SEE ALSO"
+.PP
+\fBping\fR(8),
+\fBarping\fR(8),
+\fBtracepath\fR(8).
+.SH "REFERENCES"
+.PP
+[1] ICMP ECHO,
+RFC0792, page 14.
+.PP
+[2] ICMP TIMESTAMP,
+RFC0792, page 16.
+.PP
+[3] IP TIMESTAMP option,
+RFC0791, 3.1, page 16.
+.SH "AUTHOR"
+.PP
+\fBclockdiff\fR was compiled by
+Alexey Kuznetsov
+<kuznet@ms2.inr.ac.ru>. It was based on code borrowed
+from BSD \fBtimed\fR daemon.
+It is now maintained by
+YOSHIFUJI Hideaki
+<yoshfuji@skbuff.net>.
+.SH "SECURITY"
+.PP
+\fBclockdiff\fR requires CAP_NET_RAW capability
+to be executed. It is safe to be used as set-uid root.
+.SH "AVAILABILITY"
+.PP
+\fBclockdiff\fR is part of \fIiputils\fR package
+and the latest versions are  available in source form at
+http://www.skbuff.net/iputils/iputils-current.tar.bz2.
diff -Nur a/doc/rarpd.8 iputils/doc/rarpd.8
--- a/doc/rarpd.8	1970-01-01 00:00:00.000000000 +0000
+++ iputils/doc/rarpd.8	2017-05-12 12:39:52.737411560 +0000
@@ -0,0 +1,84 @@
+.\" This manpage has been automatically generated by docbook2man 
+.\" from a DocBook document.  This tool can be found at:
+.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
+.\" Please send any bug reports, improvements, comments, patches, 
+.\" etc. to Steve Cheng <steve@ggi-project.org>.
+.TH "RARPD" "8" "" "iputils-161105" "System Manager's Manual: iputils"
+.SH NAME
+rarpd \- answer RARP REQUESTs
+.SH SYNOPSIS
+
+\fBarping\fR [\fB-aAvde\fR] [\fB-b \fIbootdir\fB\fR] [\fB\fIinterface\fB\fR]
+
+.SH "DESCRIPTION"
+.PP
+Listens
+RARP
+requests from clients. Provided MAC address of client
+is found in \fI/etc/ethers\fR database and
+obtained host name is resolvable to an IP address appropriate
+for attached network, \fBrarpd\fR answers to client with RARPD
+reply carrying an IP address.
+.PP
+To allow multiple boot servers on the network \fBrarpd\fR
+optionally checks for presence Sun-like bootable image in TFTP directory.
+It should have form \fBHexadecimal_IP.ARCH\fR, f.e. to load
+sparc 193.233.7.98 \fIC1E90762.SUN4M\fR is linked to
+an image appropriate for SUM4M in directory \fI/etc/tftpboot\fR.
+.SH "WARNING"
+.PP
+This facility is deeply obsoleted by
+BOOTP
+and later
+DHCP protocols.
+However, some clients really still need this to boot.
+.SH "OPTIONS"
+.TP
+\fB-a\fR
+Listen on all the interfaces. Currently it is an internal
+option, its function is overridden with \fIinterface\fR
+argument. It should not be used.
+.TP
+\fB-A\fR
+Listen not only RARP but also ARP messages, some rare clients
+use ARP by some unknown reason.
+.TP
+\fB-v\fR
+Be verbose.
+.TP
+\fB-d\fR
+Debug mode. Do not go to background.
+.TP
+\fB-e\fR
+Do not check for presence of a boot image, reply if MAC address
+resolves to a valid IP address using \fI/etc/ethers\fR
+database and DNS. 
+.TP
+\fB-b \fIbootdir\fB\fR
+TFTP boot directory. Default is \fI/etc/tftpboot\fR
+.SH "SEE ALSO"
+.PP
+\fBarping\fR(8),
+\fBtftpd\fR(8).
+.SH "AUTHOR"
+.PP
+\fBrarpd\fR was written by
+Alexey Kuznetsov
+<kuznet@ms2.inr.ac.ru>.
+It is now maintained by
+YOSHIFUJI Hideaki
+<yoshfuji@skbuff.net>.
+.SH "SECURITY"
+.PP
+\fBrarpd\fR requires CAP_NET_RAW capability
+to listen and send RARP and ARP packets. It also needs CAP_NET_ADMIN
+to give to kernel hint for ARP resolution; this is not strictly required,
+but some (most of, to be more exact) clients are so badly broken that
+are not able to answer ARP before they are finally booted. This is
+not wonderful taking into account that clients using RARPD in 2002
+are all unsupported relic creatures of 90's and even earlier.
+.SH "AVAILABILITY"
+.PP
+\fBrarpd\fR is part of \fIiputils\fR package
+and the latest versions are  available in source form at
+http://www.skbuff.net/iputils/iputils-current.tar.bz2.
diff -Nur a/doc/rdisc.8 iputils/doc/rdisc.8
--- a/doc/rdisc.8	1970-01-01 00:00:00.000000000 +0000
+++ iputils/doc/rdisc.8	2017-05-12 12:39:52.737411560 +0000
@@ -0,0 +1,122 @@
+.\" This manpage has been automatically generated by docbook2man 
+.\" from a DocBook document.  This tool can be found at:
+.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
+.\" Please send any bug reports, improvements, comments, patches, 
+.\" etc. to Steve Cheng <steve@ggi-project.org>.
+.TH "RDISC" "8" "" "iputils-161105" "System Manager's Manual: iputils"
+.SH NAME
+rdisc \- network router discovery daemon
+.SH SYNOPSIS
+
+\fBrdisc\fR [\fB-abdfrstvV\fR] [\fB-p \fIpreference\fB\fR] [\fB-T \fImax_interval\fB\fR] [\fB\fIsend_address\fB\fR] [\fB\fIreceive_address\fB\fR]
+
+.SH "DESCRIPTION"
+.PP
+\fBrdisc\fR implements client side of the ICMP router discover protocol.
+\fBrdisc\fR is invoked at boot time to populate the network
+routing tables with default routes. 
+.PP
+\fBrdisc\fR listens on the ALL_HOSTS (224.0.0.1) multicast address
+(or \fIreceive_address\fR provided it is given) 
+for ROUTER_ADVERTISE messages from routers. The received
+messages are handled by first ignoring those listed router addresses
+with which the host does not share a network. Among the remaining addresses
+the ones with the highest preference are selected as default routers
+and a default route is entered in the kernel routing table
+for each one of them.
+.PP
+Optionally, \fBrdisc\fR can avoid waiting for routers to announce 
+themselves by sending out a few ROUTER_SOLICITATION messages
+to the ALL_ROUTERS (224.0.0.2) multicast address 
+(or \fIsend_address\fR provided it is given) 
+when it is started.
+.PP
+A timer is associated with each router address and the address will
+no longer be considered for inclusion in the the routing tables if the 
+timer expires before a new 
+\fBadvertise\fR message is received from the router.
+The address will also be excluded from consideration if the host receives an 
+\fBadvertise\fR
+message with the preference being maximally negative.
+.PP
+Server side of router discovery protocol is supported by Cisco IOS
+and by any more or less complete UNIX routing daemon, f.e \fBgated\fR.
+Or, \fBrdisc\fR can act as responder, if compiled with -DRDISC_SERVER.
+.SH "OPTIONS"
+.TP
+\fB-a\fR
+Accept all routers independently of the preference they have in their 
+\fBadvertise\fR messages.
+Normally \fBrdisc\fR only accepts (and enters in the kernel routing
+tables) the router or routers with the highest preference.
+.TP
+\fB-b\fR
+Opposite to \fB-a\fR, i.e. install only router with the best
+preference value. It is default behaviour.
+.TP
+\fB-d\fR
+Send debugging messages to syslog.
+.TP
+\fB-f\fR
+Run \fBrdisc\fR forever even if no routers are found.
+Normally \fBrdisc\fR gives up if it has not received any 
+\fBadvertise\fR message after after soliciting three times,
+in which case it exits with a non-zero exit code.
+If \fB-f\fR is not specified in the first form then 
+\fB-s\fR must be specified.
+.TP
+\fB-r\fR
+Responder mode, available only if compiled with -DRDISC_SERVER.
+.TP
+\fB-s\fR
+Send three \fBsolicitation\fR messages initially to quickly discover
+the routers when the system is booted.
+When \fB-s\fR is specified \fBrdisc\fR
+exits with a non-zero exit code if it can not find any routers.
+This can be overridden with the \fB-f\fR option.
+.TP
+\fB-p \fIpreference\fB\fR
+Set preference in advertisement.
+Available only with -r option.
+.TP
+\fB-T \fImax_interval\fB\fR
+Set maximum advertisement interval in seconds.  Default is 600 secs.
+Available only with -r option.
+.TP
+\fB-t\fR
+Test mode. Do not go to background.
+.TP
+\fB-v\fR
+Be verbose i.e. send lots of debugging messages to syslog.
+.TP
+\fB-V\fR
+Print version and exit.
+.SH "HISTORY"
+.PP
+This program was developed by Sun Microsystems (see copyright
+notice in source file). It was ported to Linux by
+Alexey Kuznetsov
+<kuznet@ms2.inr.ac.ru>.
+It is now maintained by
+YOSHIFUJI Hideaki
+<yoshfuji@skbuff.net>.
+.SH "SEE ALSO"
+.PP
+\fBicmp\fR(7),
+\fBinet\fR(7),
+\fBping\fR(8).
+.SH "REFERENCES"
+.PP
+Deering, S.E.,ed "ICMP Router Discovery Messages",
+RFC1256, Network Information Center, SRI International,
+Menlo Park, Calif., September 1991.
+.SH "SECURITY"
+.PP
+\fBrdisc\fR requires CAP_NET_RAW to listen
+and send ICMP messages and capability CAP_NET_ADMIN
+to update routing tables. 
+.SH "AVAILABILITY"
+.PP
+\fBrdisc\fR is part of \fIiputils\fR package
+and the latest versions are  available in source form at
+http://www.skbuff.net/iputils/iputils-current.tar.bz2.
diff -Nur a/doc/tftpd.8 iputils/doc/tftpd.8
--- a/doc/tftpd.8	1970-01-01 00:00:00.000000000 +0000
+++ iputils/doc/tftpd.8	2017-05-12 12:39:52.737411560 +0000
@@ -0,0 +1,85 @@
+.\" This manpage has been automatically generated by docbook2man 
+.\" from a DocBook document.  This tool can be found at:
+.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
+.\" Please send any bug reports, improvements, comments, patches, 
+.\" etc. to Steve Cheng <steve@ggi-project.org>.
+.TH "TFTPD" "8" "" "iputils-161105" "System Manager's Manual: iputils"
+.SH NAME
+tftpd \- Trivial File Transfer Protocol server
+.SH SYNOPSIS
+
+\fBtftpd\fR \fB\fIdirectory\fB\fR
+
+.SH "DESCRIPTION"
+.PP
+\fBtftpd\fR is a server which supports the DARPA
+Trivial File Transfer Protocol
+(RFC1350).
+The TFTP server is started
+by \fBinetd\fR(8).
+.PP
+\fIdirectory\fR is required argument; if it is not given
+\fBtftpd\fR aborts. This path is prepended to any file name requested
+via TFTP protocol, effectively chrooting \fBtftpd\fR to this directory.
+File names are validated not to escape out of this directory, however
+administrator may configure such escape using symbolic links.
+.PP
+It is in difference of variants of \fBtftpd\fR usually distributed
+with unix-like systems, which take a list of directories and match
+file names to start from one of given prefixes or to some random
+default, when no arguments were given. There are two reasons not to
+behave in this way: first, it is inconvenient, clients are not expected
+to know something about layout of filesystem on server host.
+And second, TFTP protocol is not a tool for browsing of server's filesystem,
+it is just an agent allowing to boot dumb clients. 
+.PP
+In the case when \fBtftpd\fR is used together with
+\fBrarpd\fR(8),
+tftp directories in these services should coincide and it is expected
+that each client booted via TFTP has boot image corresponding
+its IP address with an architecture suffix following Sun Microsystems
+conventions. See 
+\fBrarpd\fR(8)
+for more details.
+.SH "SECURITY"
+.PP
+TFTP protocol does not provide any authentication.
+Due to this capital flaw \fBtftpd\fR is not able to restrict
+access to files and will allow only publically readable
+files to be accessed. Files may be written only if they already
+exist and are publically writable.
+.PP
+Impact is evident, directory exported via TFTP \fBmust not\fR
+contain sensitive information of any kind, everyone is allowed
+to read it as soon as a client is allowed. Boot images do not contain
+such information as rule, however you should think twice before
+publishing f.e. Cisco IOS config files via TFTP, they contain
+\fBunencrypted\fR passwords and may contain some information
+about the network, which you were not going to make public.
+.PP
+The \fBtftpd\fR server should be executed by \fBinetd\fR
+with dropped root privileges, namely with a user ID giving minimal
+access to files published in tftp directory. If it is executed
+as superuser occasionally, \fBtftpd\fR drops its UID and GID
+to 65534, which is most likely not the thing which you expect.
+However, this is not very essential; remember, only files accessible
+for everyone can be read or written via TFTP.
+.SH "SEE ALSO"
+.PP
+\fBrarpd\fR(8),
+\fBtftp\fR(1),
+\fBinetd\fR(8).
+.SH "HISTORY"
+.PP
+The \fBtftpd\fR command appeared in 4.2BSD. The source in iputils
+is cleaned up both syntactically (ANSIized) and semantically (UDP socket IO).
+.PP
+It is distributed with iputils mostly as good demo of an interesting feature
+(MSG_CONFIRM) allowing to boot long images by dumb clients
+not answering ARP requests until they are finally booted.
+However, this is full functional and can be used in production.
+.SH "AVAILABILITY"
+.PP
+\fBtftpd\fR is part of \fIiputils\fR package
+and the latest versions are  available in source form at
+http://www.skbuff.net/iputils/iputils-current.tar.bz2.
diff -Nur a/doc/tracepath.8 iputils/doc/tracepath.8
--- a/doc/tracepath.8	1970-01-01 00:00:00.000000000 +0000
+++ iputils/doc/tracepath.8	2017-05-12 12:39:52.737411560 +0000
@@ -0,0 +1,104 @@
+.\" This manpage has been automatically generated by docbook2man 
+.\" from a DocBook document.  This tool can be found at:
+.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
+.\" Please send any bug reports, improvements, comments, patches, 
+.\" etc. to Steve Cheng <steve@ggi-project.org>.
+.TH "TRACEPATH" "8" "" "iputils-161105" "System Manager's Manual: iputils"
+.SH NAME
+tracepath, tracepath6 \- traces path to a network host discovering MTU along this path
+.SH SYNOPSIS
+
+\fBtracepath\fR [\fB-n\fR] [\fB-b\fR] [\fB-l \fIpktlen\fB\fR] [\fB-m \fImax_hops\fB\fR] [\fB-p \fIport\fB\fR] \fB\fIdestination\fB\fR
+
+.SH "DESCRIPTION"
+.PP
+It traces path to \fIdestination\fR discovering MTU along this path.
+It uses UDP port \fIport\fR or some random port.
+It is similar to \fBtraceroute\fR, only does not require superuser
+privileges and has no fancy options.
+.PP
+\fBtracepath6\fR is good replacement for \fBtraceroute6\fR
+and classic example of application of Linux error queues.
+The situation with IPv4 is worse, because commercial
+IP routers do not return enough information in ICMP error messages.
+Probably, it will change, when they will be updated.
+For now it uses Van Jacobson's trick, sweeping a range
+of UDP ports to maintain trace history.
+.SH "OPTIONS"
+.TP
+\fB-n\fR
+Print primarily IP addresses numerically.
+.TP
+\fB-b\fR
+Print both of host names and IP addresses.
+.TP
+\fB-l\fR
+Sets the initial packet length to \fIpktlen\fR instead of
+65535 for \fBtracepath\fR or 128000 for \fBtracepath6\fR.
+.TP
+\fB-m\fR
+Set maximum hops (or maximum TTLs) to \fImax_hops\fR
+instead of 30.
+.TP
+\fB-p\fR
+Sets the initial destination port to use.
+.SH "OUTPUT"
+.PP
+
+.nf
+root@mops:~ # tracepath6 3ffe:2400:0:109::2
+ 1?: [LOCALHOST]                              pmtu 1500
+ 1:  dust.inr.ac.ru                   0.411ms
+ 2:  dust.inr.ac.ru        asymm  1   0.390ms pmtu 1480
+ 2:  3ffe:2400:0:109::2               463.514ms reached
+     Resume: pmtu 1480 hops 2 back 2
+.fi
+.PP
+The first column shows TTL of the probe, followed by colon.
+Usually value of TTL is obtained from reply from network,
+but sometimes reply does not contain necessary information and
+we have to guess it. In this case the number is followed by ?.
+.PP
+The second column shows the network hop, which replied to the probe.
+It is either address of router or word [LOCALHOST], if
+the probe was not sent to the network.
+.PP
+The rest of line shows miscellaneous information about path to
+the correspinding network hop. As rule it contains value of RTT.
+Additionally, it can show Path MTU, when it changes.
+If the path is asymmetric
+or the probe finishes before it reach prescribed hop, difference
+between number of hops in forward and backward direction is shown
+following keyword async. This information is not reliable.
+F.e. the third line shows asymmetry of 1, it is because the first probe
+with TTL of 2 was rejected at the first hop due to Path MTU Discovery.
+.PP
+The last line summarizes information about all the path to the destination,
+it shows detected Path MTU, amount of hops to the destination and our
+guess about amount of hops from the destination to us, which can be
+different when the path is asymmetric.
+.SH "SEE ALSO"
+.PP
+\fBtraceroute\fR(8),
+\fBtraceroute6\fR(8),
+\fBping\fR(8).
+.SH "AUTHOR"
+.PP
+\fBtracepath\fR was written by
+Alexey Kuznetsov
+<kuznet@ms2.inr.ac.ru>.
+.SH "SECURITY"
+.PP
+No security issues.
+.PP
+This lapidary deserves to be elaborated.
+\fBtracepath\fR is not a privileged program, unlike
+\fBtraceroute\fR, \fBping\fR and other beasts of this kind.
+\fBtracepath\fR may be executed by everyone who has some access
+to network, enough to send UDP datagrams to investigated destination
+using given port.
+.SH "AVAILABILITY"
+.PP
+\fBtracepath\fR is part of \fIiputils\fR package
+and the latest versions are  available in source form at
+http://www.skbuff.net/iputils/iputils-current.tar.bz2.
