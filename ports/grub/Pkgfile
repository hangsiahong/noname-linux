name=grub
version=2.02~rc2
_UNIFONT_VER="9.0.06"
desc="Boot loader for the Linux operating system"
deps="flex libusb ncurses xz intel-ucode libisoburn mtools fuse2 lvm2 dosfstools efibootmgr"
source="http://alpha.gnu.org/gnu/grub/grub-${version}.tar.gz
https://ftp.gnu.org/gnu/unifont/unifont-${_UNIFONT_VER}/unifont-${_UNIFONT_VER}.bdf.gz
0002-intel-ucode.patch
0003-10_linux-detect-archlinux-initramfs.patch
0004-add-GRUB_COLOR_variables.patch
grub.default"

ext() {
	git clone --depth=1 git://git.sv.gnu.org/grub-extras.git
	cd grub-$version
	for i in $source; do
		case "$i" in
		*.xz) continue;;
		*.patch) patch -p1 -i "$srcdir"/`basename $i` ;;
		esac
	done
	sed 's|/usr/share/fonts/dejavu|/share/fonts/dejavu /share/fonts/TTF|g' -i configure.ac
	sed -e 's#en@cyrillic en@greek##g' -i po/LINGUAS
	sed 's| ro | rw |g' -i util/grub.d/10_linux.in
	sed 's|GNU/Linux|Linux|' -i util/grub.d/10_linux.in
	mkdir grub-extras
	cp -r ../grub-extras/915resolution grub-extras/915resolution
	export GRUB_CONTRIB="${srcdir}/grub-${version}/grub-extras/"
	cp ../unifont-${_UNIFONT_VER}.bdf unifont.bdf
	./autogen.sh
}

build() {
	cd grub-$version
	local configure_args=" --prefix= \
		--enable-liblzma \
		--enable-mm-debug \
		--enable-cache-stats \
		--enable-boot-time \
		--disable-grub-mkfont \
		--enable-grub-themes \
		--enable-grub-mount \
		--enable-device-mapper \
		--disable-werror \
		--sbindir=/bin "
	unset CC AS LD RANLIB CPP
	unset CFLAGS
	unset CPPFLAGS
	unset CXXFLAGS
	unset LDFLAGS
	unset MAKEFLAGS
	CFLAGS="$CFLAGS -fno-stack-protector"
	mkdir bios
	cd bios
	../configure ${configure_args} --with-platform=pc --enable-efiemu
	make || die
	make DESTDIR="${pkgdir}/" bashcompletiondir="/share/bash-completion/completions" install || die
	cd ..
	mkdir efi
	cd efi
	../configure ${configure_args} --with-platform=efi --target=i386 --disable-efiemu --libdir=/lib
	make || die
	make DESTDIR="${pkgdir}/efi" bashcompletiondir="/share/bash-completion/completions" install || die
	rm -rf ${pkgdir}/efi/boot
	rm -rf ${pkgdir}/efi/etc
	rm -rf ${pkgdir}/efi/share
	rm -rf ${pkgdir}/efi/bin
	rm -f ${pkgdir}/efi/lib/grub/i386-efi/i386-*
	rm -f ${pkgdir}/efi/lib/grub/i386-efi/*.module
	rm -f ${pkgdir}/efi/lib/grub/i386-efi/*.image
	ls "$pkgdir"/efi/
	cp -r ${pkgdir}/efi/* ${pkgdir}
	rm -rf ${pkgdir}/efi
	cd ..
	mkdir efi64
	cd efi64
	../configure ${configure_args} --with-platform=efi --target=x86_64 --disable-efiemu --libdir=/lib
	make || die
	make DESTDIR="${pkgdir}/efi64" bashcompletiondir="/share/bash-completion/completions" install || die
	rm -rf ${pkgdir}/efi64/boot
	rm -rf ${pkgdir}/efi64/etc
	rm -rf ${pkgdir}/efi64/share
	rm -rf ${pkgdir}/efi64/bin
	rm -f ${pkgdir}/efi64/lib/grub/x86_64-efi/x86_64-*
	rm -f ${pkgdir}/efi64/lib/grub/x86_64-efi/*.module
	rm -f ${pkgdir}/efi64/lib/grub/x86_64-efi/*.image
	cp -r ${pkgdir}/efi64/* ${pkgdir}
	rm -rf ${pkgdir}/efi64
	cd ..

	rm -f "${pkgdir}/lib/grub/i386-pc"/*.module || true
	rm -f "${pkgdir}/lib/grub/i386-pc"/*.image || true
	rm -f "${pkgdir}/lib/grub/i386-pc"/kernel.exec || true
	rm -f "${pkgdir}/lib/grub/i386-pc"/gdb_grub || true
	rm -f "${pkgdir}/lib/grub/i386-pc"/gmodule.pl || true
	install -D -m0644 "${srcdir}/grub.default" "${pkgdir}/etc/default/grub"
}
