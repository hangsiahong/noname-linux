. $PORTS/llvm/Pkgfile
name=llvm-32
deps="python cmake flex bison libffi-32 zlib-32 libxml2-32 llvm"
source="http://llvm.org/releases/$version/llvm-$version.src.tar.xz
http://www.llvm.org/releases/${version}/cfe-${version}.src.tar.xz
http://www.llvm.org/releases/${version}/compiler-rt-${version}.src.tar.xz
cfe-001-fix-stdint.patch
cfe-003-fix-unwind-chain-inclusion.patch
cfe-004-add-musl-triples.patch
cfe-007-musl-use-init-array.patch
compiler-rt-002-musl-no-dlvsym.patch
llvm-003-musl.patch
"

build() {
	cd cfe-$version.src
	for i in $source;do
		case $i in
		cfe*.patch) patch -p1 -i "$srcdir/$i" || die;;
		esac
	done
	cd ..

	cd compiler-rt-$version.src
	for i in $source;do
		case $i in
		compiler-rt*.patch) patch -p1 -i "$srcdir/$i" || die;;
		esac
	done
	cd ..

	local wrksrc="`pwd`/llvm-$version.src"
	if [ -d cfe-${version}.src ]; then
		mv cfe-${version}.src ${wrksrc}/tools/clang
	fi
	if [ -d compiler-rt-${version}.src ]; then
		mv compiler-rt-${version}.src ${wrksrc}/projects/compiler-rt
	fi
	sed -i 's/set(COMPILER_RT_HAS_SANITIZER_COMMON TRUE)/set(COMPILER_RT_HAS_SANITIZER_COMMON FALSE)/' ${wrksrc}/projects/compiler-rt/cmake/config-ix.cmake

	cd llvm-$version.src
	for i in $source;do
		case $i in
		llvm*.patch) patch -p1 -i "$srcdir/$i" || die;;
		esac
	done
	rm test/tools/llvm-objdump/macho-compact-unwind-x86_64.test \
	test/tools/llvm-objdump/macho-compact-unwind-i386.test \
	test/Transforms/GlobalOpt/alias-used.ll \
	test/tools/llvm-symbolizer/print_context.c
	sed -i '/^[[:blank:]]*find_library(FFI_LIBRARY_PATH/i\
			list(INSERT CMAKE_LIBRARY_PATH 0 /lib32)' cmake/config-ix.cmake

	mkdir -p build
	cd build
	export PKG_CONFIG_PATH="/lib32/pkgconfig"

	cmake \
		-DCMAKE_BUILD_TYPE=Release \
		-DCMAKE_INSTALL_PREFIX= \
		-DLLVM_BINUTILS_INCDIR=/include \
		-DLLVM_LIBDIR_SUFFIX=32 \
		-DCMAKE_C_FLAGS:STRING=-m32 \
		-DCMAKE_CXX_FLAGS:STRING=-m32 \
		-DLLVM_TARGET_ARCH:STRING=i686 \
		-DLLVM_TARGETS_TO_BUILD='X86;AMDGPU;BPF' \
		-DLLVM_BUILD_DOCS=YES \
		-DLLVM_BUILD_TESTS=OFF \
		-DLLVM_BUILD_LLVM_DYLIB=ON \
		-DLLVM_DYLIB_EXPORT_ALL=ON \
		-DLLVM_ENABLE_FFI=YES \
		-DLLVM_ENABLE_RTTI=YES \
		-DLLVM_ENABLE_ZLIB=YES \
		-DLLVM_DEFAULT_TARGET_TRIPLE="i686-pc-linux-musl" \
		-DLLVM_LINK_LLVM_DYLIB=ON \
		-DFFI_INCLUDE_DIR="$(pkg-config --cflags-only-I libffi | sed 's|^-I||g')" \
		..
	
	make || die
	make DESTDIR="$pkgdir" install || die

	find "$pkgdir" -name .dir -delete

	rm "$pkgdir"/lib32/LLVMHello.so
	mv $pkgdir/bin/llvm-config $pkgdir/
	mv $pkgdir/include/llvm/Config/llvm-config.h $pkgdir/
	rm -r $pkgdir/bin
	rm -r $pkgdir/share
	rm -r $pkgdir/include
	rm -rf $pkgdir/docs
	rm -r "$pkgdir/libexec"

	install -d $pkgdir/bin
	install -d $pkgdir/include/llvm/Config
	mv $pkgdir/llvm-config $pkgdir/bin/llvm-config-32
	mv $pkgdir/llvm-config.h $pkgdir/include/llvm/Config/llvm-config-32.h

	install -d "$pkgdir"/lib32/bfd-plugins
	ln -s ../LLVMgold.so "$pkgdir"/lib32/bfd-plugins/LLVMgold.so
	chmod -x ${pkgdir}/lib32/*.a
}
