name=qt5-webengine
version=5.8.0
desc='Provides support for web applications using the Chromium browser project'
deps="qt5-location qt5-sensors qt5-webchannel libwebp libxslt libxcomposite ruby gperf python3 qt5-tools"
deps="qt5-webchannel qt5-location libxcomposite libxrandr pciutils libxscrnsaver libvpx libevent snappy nss libxslt libxdamage minizip ffmpeg python git gperf"
source="http://download.qt.io/official_releases/qt/${version%.*}/$version/submodules/qtwebengine-opensource-src-$version.tar.xz
hack-compiler_version_echo.patch
resolv_compat.h
qt-musl-execinfo.patch
qt-musl-resolve.patch
qt-musl-mallinfo.patch
qt-musl-off_t.patch
qt-musl-serialio.patch
qt-musl-siginfo_t.patch
qt-musl-stackframe.patch
qt-musl-sys_errno_h.patch
qtwebengine-5.7.0-icu58.patch
qtwebengine-arm-no-yield.patch
qtwebengine-system-libs.patch
7e7dd262.patch
8e147ed3.patch
a6c6665d.patch
90501711.patch
31374ba9.patch
5c2cbfcc.patch"

ext() {
	cd qtwebengine-opensource-src-$version
	for i in $source; do
		msg $i
		case $i in
		qt*patch|hack*|????????.patch) patch -p1 < ../$i || die;;
		*patch) patch -p0 < ../$i || die;;
		esac
	done
	cp ../resolv_compat.h src/3rdparty/chromium/net/dns/
}

build() {
	mkdir -p build
	cd build
	qmake CONFIG+="proprietary-codecs" WEBENGINE_CONFIG+="use_proprietary_codecs use_system_ffmpeg" ../qtwebengine-opensource-src-$version
	make || die
	make INSTALL_ROOT="$pkgdir" install || die

	find "$pkgdir/lib" -type f -name '*.prl' \
	-exec sed -i -e '/^QMAKE_PRL_BUILD_DIR/d' {} \;
}
