--- blender-2.78a/intern/guardedalloc/intern/mallocn_intern.h	2016-09-28 09:26:55.000000000 +0000
+++ blender-2.78a/intern/guardedalloc/intern/mallocn_intern.h	2016-09-28 09:26:55.000000000 +0000
@@ -54,7 +54,6 @@
 
 #if defined(__linux__) || (defined(__FreeBSD_kernel__) && !defined(__FreeBSD__)) || defined(__GLIBC__)
 #  include <malloc.h>
-#  define HAVE_MALLOC_STATS
 #elif defined(__FreeBSD__)
 #  include <malloc_np.h>
 #elif defined(__APPLE__)
--- blender-2.78a/source/blender/blenlib/intern/system.c	2016-10-25 09:59:23.000000000 +0000
+++ blender-2.78a/source/blender/blenlib/intern/system.c	2016-10-25 09:59:23.000000000 +0000
@@ -31,7 +31,7 @@
 #include "MEM_guardedalloc.h"
 
 /* for backtrace */
-#if defined(__linux__) || defined(__APPLE__)
+#if ( defined(__GLIBC__) && defined(__linux__) )|| defined(__APPLE__)
 #  include <execinfo.h>
 #elif defined(WIN32)
 #  include <windows.h>
@@ -77,7 +77,7 @@
 {
 	/* ------------- */
 	/* Linux / Apple */
-#if defined(__linux__) || defined(__APPLE__)
+#if ( defined(__GLIBC__) && defined(__linux__) )|| defined(__APPLE__)
 
 #define SIZE 100
 	void *buffer[SIZE];
--- blender-2.78a/source/creator/creator_signals.c	2016-10-24 14:13:56.000000000 +0000
+++ blender-2.78a/source/creator/creator_signals.c	2016-10-24 14:13:56.000000000 +0000
@@ -309,7 +309,20 @@
 	 * set breakpoints on sig_handle_fpe */
 	signal(SIGFPE, sig_handle_fpe);
 
 # if defined(__linux__) && defined(__GNUC__)
-	feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);
+	unsigned short int new_exc, old_exc;
+	unsigned int new;
+	int excepts = ( FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW ) & FE_ALL_EXCEPT;
+
+       /* Get the current control word of the x87 FPU.  */
+	__asm__ ("fstcw %0" : "=m" (*&new_exc));
+	old_exc = (~new_exc) & FE_ALL_EXCEPT;
+	new_exc &= ~excepts;
+	__asm__ ("fldcw %0" : : "m" (*&new_exc));
+	/* And now the same for the SSE MXCSR register.  */
+	__asm__ ("stmxcsr %0" : "=m" (*&new));
+	/* The SSE exception masks are shifted by 7 bits.  */
+	new &= ~(excepts << 7);
+	__asm__ ("ldmxcsr %0" : : "m" (*&new));
 # endif /* defined(__linux__) && defined(__GNUC__) */
 # if defined(OSX_SSE_FPE)
@@ -325,4 +325,4 @@
 #endif
 }
 
-#endif  /* WITH_PYTHON_MODULE */
\ No newline at end of file
+#endif  /* WITH_PYTHON_MODULE */
--- blender-2.78a/intern/cycles/util/util_thread.cpp	2016-10-24 14:13:56.000000000 +0000
+++ blender-2.78a/intern/cycles/util/util_thread.cpp	2016-10-24 14:13:56.000000000 +0000
@@ -26,7 +26,11 @@
     joined_(false),
 	group_(group)
 {
-	pthread_create(&pthread_id_, NULL, run, (void*)this);
+	pthread_attr_t attr;
+	pthread_attr_init(&attr);
+	pthread_attr_setstacksize(&attr, 512000);
+	pthread_create(&pthread_id_, &attr, run, (void*)this);
+	pthread_attr_destroy(&attr);
 }
 
 thread::~thread()
