--- a/src/transform.c	2014-08-25 05:16:32.000000000 +0000
+++ b/src/transform.c	2014-08-25 05:16:32.000000000 +0000
@@ -26,8 +26,6 @@
 #include "xinput.h"
 #include <string.h>
 #include <X11/extensions/Xrandr.h>
-#include <X11/extensions/Xinerama.h>
-
 
 typedef struct Matrix {
     float m[9];
@@ -258,58 +256,6 @@
     return rc;
 }
 
-static int
-map_output_xinerama(Display *dpy, int deviceid, const char *output_name)
-{
-    const char *prefix = "HEAD-";
-    XineramaScreenInfo *screens = NULL;
-    int rc = EXIT_FAILURE;
-    int event, error;
-    int nscreens;
-    int head;
-    Matrix m;
-
-    if (!XineramaQueryExtension(dpy, &event, &error))
-    {
-        fprintf(stderr, "Unable to set screen mapping. Xinerama extension not found\n");
-        goto out;
-    }
-
-    if (strlen(output_name) < strlen(prefix) + 1 ||
-        strncmp(output_name, prefix, strlen(prefix)) != 0)
-    {
-        fprintf(stderr, "Please specify the output name as HEAD-X,"
-                "where X is the screen number\n");
-        goto out;
-    }
-
-    head = output_name[strlen(prefix)] - '0';
-
-    screens = XineramaQueryScreens(dpy, &nscreens);
-
-    if (nscreens == 0)
-    {
-        fprintf(stderr, "Xinerama failed to query screens.\n");
-        goto out;
-    } else if (nscreens <= head)
-    {
-        fprintf(stderr, "Found %d screens, but you requested %s.\n",
-                nscreens, output_name);
-        goto out;
-    }
-
-    matrix_set_unity(&m);
-    set_transformation_matrix(dpy, &m,
-                              screens[head].x_org, screens[head].y_org,
-                              screens[head].width, screens[head].height,
-                              RR_Rotate_0);
-    rc = apply_matrix(dpy, deviceid, &m);
-
-out:
-    XFree(screens);
-    return rc;
-}
-
 int
 map_to_output(Display *dpy, int argc, char *argv[], char *name, char *desc)
 {
@@ -333,16 +279,8 @@
     output_name = argv[1];
     output_info = find_output_xrandr(dpy, output_name);
     if (!output_info)
-    {
-        /* Output doesn't exist. Is this a (partial) non-RandR setup?  */
-        output_info = find_output_xrandr(dpy, "default");
-        if (output_info)
-        {
-            XRRFreeOutputInfo(output_info);
-            if (strncmp("HEAD-", output_name, strlen("HEAD-")) == 0)
-                return map_output_xinerama(dpy, info->deviceid, output_name);
-        }
-    } else
+        return EXIT_FAILURE;
+    else
         XRRFreeOutputInfo(output_info);
 
     return map_output_xrandr(dpy, info->deviceid, output_name);
--- a/configure	2015-10-19 21:11:03.000000000 +0000
+++ b/configure	2015-10-19 21:11:03.000000000 +0000
@@ -10629,12 +10629,12 @@
     pkg_cv_XINPUT_CFLAGS="$XINPUT_CFLAGS"
  elif test -n "$PKG_CONFIG"; then
     if test -n "$PKG_CONFIG" && \
-    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"x11 xext xi >= 1.2 inputproto >= 1.5 xrandr xinerama\""; } >&5
-  ($PKG_CONFIG --exists --print-errors "x11 xext xi >= 1.2 inputproto >= 1.5 xrandr xinerama") 2>&5
+    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"x11 xext xi >= 1.2 inputproto >= 1.5 xrandr \""; } >&5
+  ($PKG_CONFIG --exists --print-errors "x11 xext xi >= 1.2 inputproto >= 1.5 xrandr ") 2>&5
   ac_status=$?
   $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
   test $ac_status = 0; }; then
-  pkg_cv_XINPUT_CFLAGS=`$PKG_CONFIG --cflags "x11 xext xi >= 1.2 inputproto >= 1.5 xrandr xinerama" 2>/dev/null`
+  pkg_cv_XINPUT_CFLAGS=`$PKG_CONFIG --cflags "x11 xext xi >= 1.2 inputproto >= 1.5 xrandr " 2>/dev/null`
 		      test "x$?" != "x0" && pkg_failed=yes
 else
   pkg_failed=yes
@@ -10646,12 +10646,12 @@
     pkg_cv_XINPUT_LIBS="$XINPUT_LIBS"
  elif test -n "$PKG_CONFIG"; then
     if test -n "$PKG_CONFIG" && \
-    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"x11 xext xi >= 1.2 inputproto >= 1.5 xrandr xinerama\""; } >&5
-  ($PKG_CONFIG --exists --print-errors "x11 xext xi >= 1.2 inputproto >= 1.5 xrandr xinerama") 2>&5
+    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \"x11 xext xi >= 1.2 inputproto >= 1.5 xrandr \""; } >&5
+  ($PKG_CONFIG --exists --print-errors "x11 xext xi >= 1.2 inputproto >= 1.5 xrandr ") 2>&5
   ac_status=$?
   $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
   test $ac_status = 0; }; then
-  pkg_cv_XINPUT_LIBS=`$PKG_CONFIG --libs "x11 xext xi >= 1.2 inputproto >= 1.5 xrandr xinerama" 2>/dev/null`
+  pkg_cv_XINPUT_LIBS=`$PKG_CONFIG --libs "x11 xext xi >= 1.2 inputproto >= 1.5 xrandr " 2>/dev/null`
 		      test "x$?" != "x0" && pkg_failed=yes
 else
   pkg_failed=yes
@@ -10672,14 +10672,14 @@
         _pkg_short_errors_supported=no
 fi
         if test $_pkg_short_errors_supported = yes; then
-	        XINPUT_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "x11 xext xi >= 1.2 inputproto >= 1.5 xrandr xinerama" 2>&1`
+	        XINPUT_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "x11 xext xi >= 1.2 inputproto >= 1.5 xrandr " 2>&1`
         else
-	        XINPUT_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "x11 xext xi >= 1.2 inputproto >= 1.5 xrandr xinerama" 2>&1`
+	        XINPUT_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "x11 xext xi >= 1.2 inputproto >= 1.5 xrandr " 2>&1`
         fi
 	# Put the nasty error message in config.log where it belongs
 	echo "$XINPUT_PKG_ERRORS" >&5
 
-	as_fn_error $? "Package requirements (x11 xext xi >= 1.2 inputproto >= 1.5 xrandr xinerama) were not met:
+	as_fn_error $? "Package requirements (x11 xext xi >= 1.2 inputproto >= 1.5 xrandr ) were not met:
 
 $XINPUT_PKG_ERRORS
 
