--- a/chrome/common/string_matching/fuzzy_tokenized_string_match.cc	2020-01-09 02:50:41.000000000 +0800
+++ b/chrome/common/string_matching/fuzzy_tokenized_string_match.cc	2020-01-09 02:50:41.000000000 +0800
@@ -5,6 +5,7 @@
 #include "chrome/common/string_matching/fuzzy_tokenized_string_match.h"
 
 #include <algorithm>
+#include <cmath>
 #include <iterator>
 
 #include "base/i18n/case_conversion.h"
--- a/ui/base/cursor/ozone/bitmap_cursor_factory_ozone.cc	2020-01-09 02:50:47.000000000 +0800
+++ b/ui/base/cursor/ozone/bitmap_cursor_factory_ozone.cc	2020-01-09 02:50:47.000000000 +0800
@@ -7,6 +7,7 @@
 #include "base/logging.h"
 #include "third_party/skia/include/core/SkBitmap.h"
 #include "ui/base/cursor/cursors_aura.h"
+#include <algorithm>
 
 namespace ui {
 
--- a/third_party/blink/renderer/core/html/canvas/html_canvas_element.h
+++ b/third_party/blink/renderer/core/html/canvas/html_canvas_element.h
@@ -227,7 +227,7 @@ class CORE_EXPORT HTMLCanvasElement final
   bool IsPrinting() const override;
 
   void DisableAcceleration(std::unique_ptr<Canvas2DLayerBridge>
-                               unaccelerated_bridge_used_for_testing = nullptr);
+                               unaccelerated_bridge_used_for_testing);
 
   // ImageBitmapSource implementation
   IntSize BitmapSourceSize() const override;
diff --git a/third_party/blink/renderer/modules/canvas/canvas2d/canvas_rendering_context_2d.cc b/third_party/blink/renderer/modules/canvas/canvas2d/canvas_rendering_context_2d.cc
index 1b08424ad109..b659d9b9a399 100644
--- a/third_party/blink/renderer/modules/canvas/canvas2d/canvas_rendering_context_2d.cc
+++ b/third_party/blink/renderer/modules/canvas/canvas2d/canvas_rendering_context_2d.cc
@@ -1129,7 +1129,7 @@ unsigned CanvasRenderingContext2D::HitRegionsCount() const {
 // TODO(aaronhk) This is only used for the size heuristic. Delete this function
 // once always accelerate fully lands.
 void CanvasRenderingContext2D::DisableAcceleration() {
-  canvas()->DisableAcceleration();
+  canvas()->DisableAcceleration(nullptr);
 }
 
 bool CanvasRenderingContext2D::IsCanvas2DBufferValid() const {
diff --git a/third_party/blink/renderer/platform/scheduler/public/event_loop.h b/third_party/blink/renderer/platform/scheduler/public/event_loop.h
index d2ee089685f5..94cb4efd265a 100644
--- a/third_party/blink/renderer/platform/scheduler/public/event_loop.h
+++ b/third_party/blink/renderer/platform/scheduler/public/event_loop.h
@@ -87,7 +87,7 @@ class PLATFORM_EXPORT EventLoop final : public WTF::RefCounted<EventLoop> {
   friend blink::Agent;
 
   EventLoop(v8::Isolate* isolate,
-            std::unique_ptr<v8::MicrotaskQueue> microtask_queue = nullptr);
+            std::unique_ptr<v8::MicrotaskQueue> microtask_queue);
   ~EventLoop();
 
   static void RunPendingMicrotask(void* data);
-- 
2.20.1

Upstream-Status: Pending

Signed-off-by: Maksim Sisov <msisov@igalia.com>
---
From 377441930e304c622859f669c6d6689657df8e1a Mon Sep 17 00:00:00 2001
From: Maksim Sisov <msisov@igalia.com>
Date: Tue, 17 Dec 2019 14:39:15 +0200
Subject: [PATCH 2/2] media: do not use fwd decl with nullptr instantiation of
 unique_ptr<T>.

nullptr instantiation requires ctor and dtor to be declared, and
result in

/include/c++/8.2.0/bits/unique_ptr.h:79:16: error: invalid application of 'sizeof' to an incomplete type 'gpu::GpuMemoryBufferSupport'
        static_assert(sizeof(_Tp)>0,
                      ^~~~~~~~~~~
/include/c++/8.2.0/bits/unique_ptr.h:274:4: note: in instantiation of member function 'std::default_delete<gpu::GpuMemoryBufferSupport>::operator()' requested here
          get_deleter()(__ptr);
          ^
/include/c++/8.2.0/bits/unique_ptr.h:236:45: note: in instantiation of member function 'std::unique_ptr<gpu::GpuMemoryBufferSupport, std::default_delete<gpu::GpuMemoryBufferSupport> >::~unique_ptr' requested here
        constexpr unique_ptr(nullptr_t) noexcept : unique_ptr() { }
                                                   ^
../../media/capture/video/fake_video_capture_device.h:18:7: note: forward declaration of 'gpu::GpuMemoryBufferSupport'
class GpuMemoryBufferSupport;
      ^

Thus, remove fwd declration

Bug: 819294
---
 media/capture/video/fake_video_capture_device_factory.h | 5 +----
 1 file changed, 1 insertion(+), 4 deletions(-)

diff --git a/media/capture/video/fake_video_capture_device_factory.h b/media/capture/video/fake_video_capture_device_factory.h
index 8461caefcd83..450dc3633b75 100644
--- a/media/capture/video/fake_video_capture_device_factory.h
+++ b/media/capture/video/fake_video_capture_device_factory.h
@@ -11,13 +11,10 @@
 #include <utility>
 #include <vector>
 
+#include "gpu/ipc/common/gpu_memory_buffer_support.h"
 #include "media/capture/video/fake_video_capture_device.h"
 #include "media/capture/video/video_capture_device_factory.h"
 
-namespace gpu {
-class GpuMemoryBufferSupport;
-}  // namespace gpu
-
 namespace media {
 
 struct CAPTURE_EXPORT FakeVideoCaptureDeviceSettings {
-- 
2.20.1

