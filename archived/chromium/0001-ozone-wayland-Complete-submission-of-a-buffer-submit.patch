Upstream-Status: Backport

Backported from https://crrev.com/c/1946479

Signed-off-by: Maksim Sisov <msisov@igalia.com>
---
From 4c9a7209005ee6c134692932d4c6d784d48ada34 Mon Sep 17 00:00:00 2001
From: Maksim Sisov <msisov@igalia.com>
Date: Tue, 3 Dec 2019 08:23:42 +0000
Subject: [PATCH] ozone/wayland: Complete submission of a buffer submitted more
 than once

This CL fixes a corner use case that was caught by one of the users
of Ozone/Wayland.

The problem appeared when the Chromium compositor sent a next frame into
the same buffer that had just been submitted and a OnSubmission callback
had been sent to the viz process located WaylandBufferManager. This
happened only when the remote inspector was attached and the screencast
was enabled.

In this case, Wayland compositor will not send an OnRelease callback
and we should not wait for that. Instead, we must complete the
submission immediately and set the |WaylandBuffer::released|
member to be false. Once another buffer is committed, Wayland compositor
will release the previous buffer.

Bug: 1029777
Change-Id: Ib74c16f41f128298998bc9699f8d9ded3697cd43
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/1946479
Commit-Queue: Maksim Sisov <msisov@igalia.com>
Reviewed-by: Robert Kroeger <rjkroege@chromium.org>
Cr-Commit-Position: refs/heads/master@{#720878}
---
 .../host/wayland_buffer_manager_host.cc       | 22 ++++--
 .../wayland_buffer_manager_unittest.cc        | 78 +++++++++++++++++++
 2 files changed, 95 insertions(+), 5 deletions(-)

diff --git a/ui/ozone/platform/wayland/host/wayland_buffer_manager_host.cc b/ui/ozone/platform/wayland/host/wayland_buffer_manager_host.cc
index f360f916cae7..c7fc7094475a 100644
--- a/ui/ozone/platform/wayland/host/wayland_buffer_manager_host.cc
+++ b/ui/ozone/platform/wayland/host/wayland_buffer_manager_host.cc
@@ -231,13 +231,20 @@ class WaylandBufferManagerHost::Surface {
     DCHECK(buffer);
     DCHECK(!pending_buffer_);
 
-    // Once the BufferRelease is called, the buffer will be released.
-    DCHECK(buffer->released);
-    buffer->released = false;
-
     DCHECK(!submitted_buffer_);
     submitted_buffer_ = buffer;
 
+    // if the same buffer has been submitted again right after the client
+    // received OnSubmission for that buffer, just verify that the buffer has
+    // not been released by Wayland compositor, which is correct.
+    if (prev_submitted_buffer_ != submitted_buffer_) {
+      // Once the BufferRelease is called, the buffer will be released.
+      DCHECK(buffer->released);
+      buffer->released = false;
+    } else {
+      DCHECK(!buffer->released);
+    }
+
     AttachAndDamageBuffer(buffer);
 
     SetupFrameCallback();
@@ -258,7 +265,12 @@ class WaylandBufferManagerHost::Surface {
     // If it was the very first frame, the surface has not had a back buffer
     // before, and Wayland won't release the front buffer until next buffer is
     // attached. Thus, notify about successful submission immediately.
-    if (!prev_submitted_buffer_)
+    //
+    // As said above, if the client submits the same buffer again, we must
+    // notify the client about the submission immediately as Wayland compositor
+    // is not going to send a release callback for a buffer committed more than
+    // once.
+    if (!prev_submitted_buffer_ || prev_submitted_buffer_ == submitted_buffer_)
       CompleteSubmission();
 
     return true;
